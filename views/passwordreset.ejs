<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= settings.name %> - Reset Password</title>
    <link rel="stylesheet" href="assets/tailwind.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=Space+Grotesk:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">
    <style>
        #mainContent {
            transition: opacity 0.3s ease, visibility 0.3s ease;
        }
        #mainContent.hide {
            opacity: 0;
            visibility: hidden;
        }
        .spinner {
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top: 2px solid white;
            width: 16px;
            height: 16px;
            animation: spin 1s linear infinite;
            display: none;
            margin-left: 8px;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .error-shake {
            animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
            transform: translate3d(0, 0, 0);
        }
        @keyframes shake {
            10%, 90% { transform: translate3d(-1px, 0, 0); }
            20%, 80% { transform: translate3d(2px, 0, 0); }
            30%, 50%, 70% { transform: translate3d(-4px, 0, 0); }
            40%, 60% { transform: translate3d(4px, 0, 0); }
        }
        .fade-in {
            animation: fadeIn 0.3s ease-in;
        }
        @keyframes fadeIn {
            0% { opacity: 0; }
            100% { opacity: 1; }
        }
        .slide-in {
            animation: slideIn 0.3s ease-out;
        }
        @keyframes slideIn {
            0% { transform: translateY(-20px); opacity: 0; }
            100% { transform: translateY(0); opacity: 1; }
        }
    </style>
</head>
<body style="font-family: 'Inter'" class="bg-[#1a1f2a] min-h-screen flex flex-col">
    <!-- Logo at the top -->
    <header class="w-full p-4 flex justify-center">
        <img src="/assets/logo-text.png" alt="Logo" class="h-12 hover:scale-90 transition cursor-pointer">
    </header>
    <!-- Main content -->
    <main id="mainContent" class="flex-grow flex items-center justify-center">
        <div class="border border-white/5 rounded-lg backdrop-blur shadow-sm py-12 p-8 max-w-sm w-full relative z-10">
            <h2 class="text-center text-xl mt-4 font-semibold text-white" style="font-family: 'Inter'">Reset Your Password</h2>
            <p class="text-zinc-400 text-center mt-1 font-normal text-sm">Enter your new password below</p>
            
            <!-- Password Reset Form -->
            <form id="resetForm" class="mt-8 space-y-4">
                <div>
                    <input type="password" id="newPassword" name="newPassword" class="w-full py-2.5 px-4 rounded-lg bg-white/5 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500" placeholder="New Password" required>
                </div>
                <div>
                    <input type="password" id="confirmPassword" name="confirmPassword" class="w-full py-2.5 px-4 rounded-lg bg-white/5 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500" placeholder="Confirm New Password" required>
                </div>
                <button type="submit" class="w-full py-2.5 px-4 bg-indigo-500 text-white rounded-lg transition font-medium hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-800">
                    Reset Password
                    <span class="spinner" id="resetSpinner"></span>
                </button>
            </form>
            
            <div class="mt-6 text-center">
                <p class="text-sm text-gray-400">Remember your password? <a href="/" class="text-indigo-400 hover:underline">Login</a></p>
            </div>
        </div>
    </main>
    <!-- Footer with links and copyright -->
    <footer class="w-full p-4 bg-[#1a1f2a] text-center">
        <p class="text-xs text-gray-400 font-medium">&copy; 2022 - <%= new Date().getFullYear() %> <%= settings.name %>. All rights reserved. </p>
    </footer>

    <!-- Toast Notification -->
    <div id="toast" class="fixed bottom-5 right-5 bg-red-500 text-white px-4 py-2 rounded-lg shadow-lg transition-opacity duration-300 opacity-0 pointer-events-none">
        Error message goes here
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const resetForm = document.getElementById('resetForm');
        const resetSpinner = document.getElementById('resetSpinner');
        const toast = document.getElementById('toast');

        function showToast(message, type = 'error') {
            toast.textContent = message;
            toast.classList.remove('bg-red-500', 'bg-green-500');
            toast.classList.add(type === 'error' ? 'bg-red-500' : 'bg-green-500');
            toast.classList.remove('opacity-0');
            toast.classList.add('opacity-100', 'slide-in');
            setTimeout(() => {
                toast.classList.remove('opacity-100', 'slide-in');
                toast.classList.add('opacity-0');
            }, 3000);
        }

        function getTokenFromURL() {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get('token');
        }

        resetForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            resetSpinner.style.display = 'inline-block';

            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const token = getTokenFromURL();

            if (newPassword !== confirmPassword) {
                showToast('Passwords do not match.');
                resetSpinner.style.display = 'none';
                return;
            }

            try {
                const response = await fetch('/auth/reset-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ token, newPassword }),
                });

                const data = await response.json();

                if (response.ok) {
                    showToast('Password reset successful!', 'success');
                    setTimeout(() => {
                        window.location.href = '/';
                    }, 2000);
                } else {
                    showToast(data.error || 'Password reset failed. Please try again.');
                    resetForm.classList.add('error-shake');
                    setTimeout(() => resetForm.classList.remove('error-shake'), 1000);
                }
            } catch (error) {
                showToast('An error occurred. Please try again later.');
            } finally {
                resetSpinner.style.display = 'none';
            }
        });
    });
    </script>
</body>
</html>