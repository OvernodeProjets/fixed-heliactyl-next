<%- include('../components/top') %>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap" rel="stylesheet">
<main class="flex-grow container mx-auto px-4 py-8">
    <div class="mb-5 lg:flex lg:items-center lg:justify-between">
        <div class="min-w-0 flex-1">
          <h2 class="text-2xl font-bold leading-7 text-white sm:truncate sm:text-3xl sm:tracking-tight" id="server-name"><svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg></h2>
          <div class="mt-1 flex flex-col sm:mt-0 sm:flex-row sm:flex-wrap sm:space-x-6">
            <div class="mt-2 flex items-center text-sm text-gray-300">
              <!-- Heroicon name: mini/briefcase -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-500">
                <path fill-rule="evenodd" d="M7.502 6h7.128A3.375 3.375 0 0 1 18 9.375v9.375a3 3 0 0 0 3-3V6.108c0-1.505-1.125-2.811-2.664-2.94a48.972 48.972 0 0 0-.673-.05A3 3 0 0 0 15 1.5h-1.5a3 3 0 0 0-2.663 1.618c-.225.015-.45.032-.673.05C8.662 3.295 7.554 4.542 7.502 6ZM13.5 3A1.5 1.5 0 0 0 12 4.5h4.5A1.5 1.5 0 0 0 15 3h-1.5Z" clip-rule="evenodd" />
                <path fill-rule="evenodd" d="M3 9.375C3 8.339 3.84 7.5 4.875 7.5h9.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 0 1 3 20.625V9.375Zm9.586 4.594a.75.75 0 0 0-1.172-.938l-2.476 3.096-.908-.907a.75.75 0 0 0-1.06 1.06l1.5 1.5a.75.75 0 0 0 1.116-.062l3-3.75Z" clip-rule="evenodd" />
              </svg>                    
              <span id="server-description"><svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg></span>
            </div>
            <div class="mt-2 flex items-center text-sm text-gray-300">
              <!-- Heroicon name: mini/map-pin -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-500">
                <path d="M4.08 5.227A3 3 0 0 1 6.979 3H17.02a3 3 0 0 1 2.9 2.227l2.113 7.926A5.228 5.228 0 0 0 18.75 12H5.25a5.228 5.228 0 0 0-3.284 1.153L4.08 5.227Z" />
                <path fill-rule="evenodd" d="M5.25 13.5a3.75 3.75 0 1 0 0 7.5h13.5a3.75 3.75 0 1 0 0-7.5H5.25Zm10.5 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm3.75-.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" clip-rule="evenodd" />
              </svg>              
              Server <%= req.query.id %>
            </div>
            <div class="mt-2 flex items-center text-sm text-gray-300">
              <!-- Heroicon name: mini/currency-dollar -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-500">
                <path fill-rule="evenodd" d="M12.516 2.17a.75.75 0 0 0-1.032 0 11.209 11.209 0 0 1-7.877 3.08.75.75 0 0 0-.722.515A12.74 12.74 0 0 0 2.25 9.75c0 5.942 4.064 10.933 9.563 12.348a.749.749 0 0 0 .374 0c5.499-1.415 9.563-6.406 9.563-12.348 0-1.39-.223-2.73-.635-3.985a.75.75 0 0 0-.722-.516l-.143.001c-2.996 0-5.717-1.17-7.734-3.08Zm3.094 8.016a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" clip-rule="evenodd" />
              </svg>              
              Volumetric Shield enabled
            </div>
            <div class="hidden mt-2 flex items-center text-sm text-gray-300">
              <!-- Heroicon name: mini/calendar -->
              <svg class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M5.75 2a.75.75 0 01.75.75V4h7V2.75a.75.75 0 011.5 0V4h.25A2.75 2.75 0 0118 6.75v8.5A2.75 2.75 0 0115.25 18H4.75A2.75 2.75 0 012 15.25v-8.5A2.75 2.75 0 014.75 4H5V2.75A.75.75 0 015.75 2zm-1 5.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25v-6.5c0-.69-.56-1.25-1.25-1.25H4.75z" clip-rule="evenodd" />
              </svg>
              <span id="server-name-breadcrumb"></span>
            </div>
          </div>
        </div>
        <div class="mt-5 flex lg:mt-0 lg:ml-4">
          <span class="hidden sm:block">
            <a href="/servers" class="inline-flex items-center rounded-xl border border-transparent bg-indigo-900/50 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-900 transition focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-indigo-800">
              <!-- Heroicon name: mini/pencil -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="-ml-1 mr-2 h-5 w-5 text-indigo-200">
                <path fill-rule="evenodd" d="M9.53 2.47a.75.75 0 0 1 0 1.06L4.81 8.25H15a6.75 6.75 0 0 1 0 13.5h-3a.75.75 0 0 1 0-1.5h3a5.25 5.25 0 1 0 0-10.5H4.81l4.72 4.72a.75.75 0 1 1-1.06 1.06l-6-6a.75.75 0 0 1 0-1.06l6-6a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd" />
              </svg>                
              Back to server list
            </a>
          </span>
        </div>
      </div>      

    <%- include('../components/server') %>

    <!-- Search Bar -->
    <div class="mb-6">
        <div class="relative">
            <input type="text" id="search-input" placeholder="Search plugins..." class="w-full bg-white/5 border border-white/10 text-white rounded-xl px-4 py-2 pl-10 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition">
            <svg class="absolute left-3 top-2.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
            </svg>
        </div>
    </div>

    <!-- Plugin List -->
    <div id="plugin-list" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Plugins will be dynamically added here -->
    </div>

    <!-- Loading Indicator -->
    <div id="loading" class="text-center py-4 hidden">
        <svg class="animate-spin h-8 w-8 text-white mx-auto" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
    </div>
</main>

<script>
const serverId = new URLSearchParams(window.location.search).get('id');

// Fetch server details
fetch(`/api/server/${serverId}`)
    .then(response => response.json())
    .then(data => {
        document.getElementById('server-name').textContent = data.attributes.name;
        document.getElementById('server-name-breadcrumb').textContent = data.attributes.name;
        document.getElementById('server-description').textContent = data.attributes.description || "No description set.";
    });
    
const pluginList = document.getElementById('plugin-list');
const searchInput = document.getElementById('search-input');
const loadingIndicator = document.getElementById('loading');

// Function to fetch and display plugins
async function fetchPlugins(searchQuery = '') {
    showLoading();
    try {
        const endpoint = searchQuery ? `/api/plugins/search?query=${encodeURIComponent(searchQuery)}` : '/api/plugins/list';
        const response = await fetch(endpoint);
        const plugins = await response.json();
        displayPlugins(plugins);
    } catch (error) {
        console.error('Error fetching plugins:', error);
        pluginList.innerHTML = '<p class="text-red-500">Error loading plugins. Please try again later.</p>';
    } finally {
        hideLoading();
    }
}

function truncateName(name) {
  if (name.length > 80) {
    return name.slice(0, 77) + '...';
  }
  return name;
}

// Function to display plugins
function displayPlugins(plugins) {
    pluginList.innerHTML = '';
    plugins.forEach(plugin => {
        const pluginCard = document.createElement('div');
        pluginCard.className = 'bg-white/5 rounded-xl p-4 flex flex-col h-full';

        if (plugin.external !== true) {
        pluginCard.innerHTML = `
            <div class="flex items-center mb-4">
                <img src="data:image/jpeg;base64,${plugin.icon.data}" alt="${plugin.name}" class="w-12 h-12 rounded-lg mr-4">
                <div>
                    <h3 class="text-lg font-semibold" truncate>${truncateName(plugin.name)}</h3>
                    <p class="text-sm text-gray-400">${plugin.rating.average} stars rating</p>
                </div>
            </div>
            <p class="text-sm mb-4 flex-grow">${plugin.tag || 'No description available.'}</p>
            <div class="flex justify-between items-center mt-auto">
                <span class="text-xs text-gray-400">${plugin.downloads.toLocaleString()} downloads</span>
                <button onclick="window.location.href='https://spigotmc.org/${plugin.file.url}'" class="bg-neutral-600 hover:bg-neutral-700 text-white text-sm py-1.5 px-3 rounded-lg transition">External Download</button>
            </div>
        `;
        } else {
        pluginCard.innerHTML = `
            <div class="flex items-center mb-4">
                <img src="data:image/jpeg;base64,${plugin.icon.data}" alt="${plugin.name}" class="w-12 h-12 rounded-lg mr-4">
                <div>
                    <h3 class="text-lg font-semibold" truncate>${truncateName(plugin.name)}</h3>
                    <p class="text-sm text-gray-400">${plugin.rating.average} stars rating</p>
                </div>
            </div>
            <p class="text-sm mb-4 flex-grow">${plugin.tag || 'No description available.'}</p>
            <div class="flex justify-between items-center mt-auto">
                <span class="text-xs text-gray-400">${plugin.downloads.toLocaleString()} downloads</span>
                <button onclick="installPlugin('${plugin.id}', this)" class="install-button bg-indigo-500 hover:bg-indigo-700 text-white text-sm py-1.5 px-3 rounded-lg transition">Install/Reinstall</button>
            </div>
        `;
        }
        pluginList.appendChild(pluginCard);
    });
}

// Function to install a plugin
async function installPlugin(pluginId, button) {
    const originalText = button.innerHTML;
    button.disabled = true;
    button.innerHTML = `<svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
    </svg>`;

    try {
        const response = await fetch(`/api/plugins/install/${serverId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ pluginId }),
        });
        const result = await response.json();
        if (response.ok) {
            alert('Plugin installed successfully! You will need to restart your server for it to take effect.');
        } else {
            alert(`Failed to install plugin: ${result.error}`);
        }
    } catch (error) {
        console.error('Error installing plugin:', error);
        alert('An error occurred while installing the plugin. Please try again later.');
    } finally {
        button.disabled = false;
        button.innerHTML = originalText;
    }
}

// Event listener for search input
searchInput.addEventListener('input', debounce(() => {
    fetchPlugins(searchInput.value);
}, 300));

// Debounce function to limit API calls
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// Show loading indicator
function showLoading() {
    loadingIndicator.classList.remove('hidden');
}

// Hide loading indicator
function hideLoading() {
    loadingIndicator.classList.add('hidden');
}

// Initial load
fetchPlugins();
</script>

<%- include('../components/bottom') %>