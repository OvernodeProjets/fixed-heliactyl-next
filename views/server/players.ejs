<%- include('../components/top') %>
<style>
    .player-card {
        transition: all 0.2s ease-in-out;
    }
    .player-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    }
    .player-head {
        width: 40px;
        height: 40px;
        background-size: cover;
        border-radius: 4px;
    }
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s ease, visibility 0.3s ease;
    }
    .modal-content {
        background-color: #1a1c20;
        padding: 2rem;
        border-radius: 0.5rem;
        max-width: 90%;
        max-height: 90%;
        overflow: auto;
        transform: scale(0.9);
        opacity: 0;
        transition: transform 0.3s ease, opacity 0.3s ease;
    }
    .modal-overlay.active {
        opacity: 1;
        visibility: visible;
    }
    .modal-overlay.active .modal-content {
        transform: scale(1);
        opacity: 1;
    }
</style>

<main class="flex-grow container mx-auto px-4 py-8">
    <div class="mb-5 lg:flex lg:items-center lg:justify-between">
        <div class="min-w-0 flex-1">
          <h2 class="text-2xl font-bold leading-7 text-white sm:truncate sm:text-3xl sm:tracking-tight" id="server-name"><svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg></h2>
          <div class="mt-1 flex flex-col sm:mt-0 sm:flex-row sm:flex-wrap sm:space-x-6">
            <div class="mt-2 flex items-center text-sm text-gray-300">
              <!-- Heroicon name: mini/briefcase -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-500">
                <path fill-rule="evenodd" d="M7.502 6h7.128A3.375 3.375 0 0 1 18 9.375v9.375a3 3 0 0 0 3-3V6.108c0-1.505-1.125-2.811-2.664-2.94a48.972 48.972 0 0 0-.673-.05A3 3 0 0 0 15 1.5h-1.5a3 3 0 0 0-2.663 1.618c-.225.015-.45.032-.673.05C8.662 3.295 7.554 4.542 7.502 6ZM13.5 3A1.5 1.5 0 0 0 12 4.5h4.5A1.5 1.5 0 0 0 15 3h-1.5Z" clip-rule="evenodd" />
                <path fill-rule="evenodd" d="M3 9.375C3 8.339 3.84 7.5 4.875 7.5h9.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 0 1 3 20.625V9.375Zm9.586 4.594a.75.75 0 0 0-1.172-.938l-2.476 3.096-.908-.907a.75.75 0 0 0-1.06 1.06l1.5 1.5a.75.75 0 0 0 1.116-.062l3-3.75Z" clip-rule="evenodd" />
              </svg>                    
              <span id="server-description"><svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg></span>
            </div>
            <div class="mt-2 flex items-center text-sm text-gray-300">
              <!-- Heroicon name: mini/map-pin -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-500">
                <path d="M4.08 5.227A3 3 0 0 1 6.979 3H17.02a3 3 0 0 1 2.9 2.227l2.113 7.926A5.228 5.228 0 0 0 18.75 12H5.25a5.228 5.228 0 0 0-3.284 1.153L4.08 5.227Z" />
                <path fill-rule="evenodd" d="M5.25 13.5a3.75 3.75 0 1 0 0 7.5h13.5a3.75 3.75 0 1 0 0-7.5H5.25Zm10.5 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm3.75-.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" clip-rule="evenodd" />
              </svg>              
              Server <%= req.query.id %>
            </div>
            <div class="mt-2 flex items-center text-sm text-gray-300">
              <!-- Heroicon name: mini/currency-dollar -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-500">
                <path fill-rule="evenodd" d="M12.516 2.17a.75.75 0 0 0-1.032 0 11.209 11.209 0 0 1-7.877 3.08.75.75 0 0 0-.722.515A12.74 12.74 0 0 0 2.25 9.75c0 5.942 4.064 10.933 9.563 12.348a.749.749 0 0 0 .374 0c5.499-1.415 9.563-6.406 9.563-12.348 0-1.39-.223-2.73-.635-3.985a.75.75 0 0 0-.722-.516l-.143.001c-2.996 0-5.717-1.17-7.734-3.08Zm3.094 8.016a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z" clip-rule="evenodd" />
              </svg>              
              Volumetric Shield enabled
            </div>
            <div class="hidden mt-2 flex items-center text-sm text-gray-300">
              <!-- Heroicon name: mini/calendar -->
              <svg class="mr-1.5 h-5 w-5 flex-shrink-0 text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                <path fill-rule="evenodd" d="M5.75 2a.75.75 0 01.75.75V4h7V2.75a.75.75 0 011.5 0V4h.25A2.75 2.75 0 0118 6.75v8.5A2.75 2.75 0 0115.25 18H4.75A2.75 2.75 0 012 15.25v-8.5A2.75 2.75 0 014.75 4H5V2.75A.75.75 0 015.75 2zm-1 5.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25v-6.5c0-.69-.56-1.25-1.25-1.25H4.75z" clip-rule="evenodd" />
              </svg>
              <span id="server-name-breadcrumb"></span>
            </div>
          </div>
        </div>
        <div class="mt-5 flex lg:mt-0 lg:ml-4">
          <span class="hidden sm:block">
            <a href="/servers" class="inline-flex items-center rounded-xl border border-transparent bg-indigo-900/50 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-900 transition focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-indigo-800">
              <!-- Heroicon name: mini/pencil -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="-ml-1 mr-2 h-5 w-5 text-indigo-200">
                <path fill-rule="evenodd" d="M9.53 2.47a.75.75 0 0 1 0 1.06L4.81 8.25H15a6.75 6.75 0 0 1 0 13.5h-3a.75.75 0 0 1 0-1.5h3a5.25 5.25 0 1 0 0-10.5H4.81l4.72 4.72a.75.75 0 1 1-1.06 1.06l-6-6a.75.75 0 0 1 0-1.06l6-6a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd" />
              </svg>                
              Back to server list
            </a>
          </span>
        </div>
      </div>   

    <%- include('../components/server') %>

    <!-- Online Players Section -->
    <div class="bg-white/5 rounded-xl p-6 mb-6">
        <div class="flex justify-between items-center mb-4">
            <div>
                <h2 class="text-xl font-semibold text-white">Online Players</h2>
                <p class="text-gray-400 text-sm mt-1">Currently active players on your server</p>
            </div>
        </div>
        
        <div id="online-players-loading" class="text-center py-12">
            <svg class="animate-spin h-8 w-8 text-white mx-auto" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
        </div>

        <div id="online-players-list" class="hidden grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <!-- Online players will be populated here -->
        </div>

        <div id="online-players-empty" class="hidden text-center py-12">
            <div class="w-16 h-16 mx-auto mb-4 bg-indigo-900/50 rounded-full flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10 text-indigo-300">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z" />
                </svg>
            </div>
            <h3 class="text-lg font-medium text-white mb-2">No Players Online</h3>
            <p class="text-indigo-200/60">Waiting for players to join the server</p>
        </div>
    </div>

    <!-- Banned Players Section -->
    <div class="bg-white/5 rounded-xl p-6">
        <div class="flex justify-between items-center mb-4">
            <div>
                <h2 class="text-xl font-semibold text-white">Banned Players</h2>
                <p class="text-gray-400 text-sm mt-1">List of players banned from your server</p>
            </div>
        </div>

        <div id="banned-players-loading" class="text-center py-12">
            <svg class="animate-spin h-8 w-8 text-white mx-auto" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
        </div>

        <div id="banned-players-list" class="hidden grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <!-- Banned players will be populated here -->
        </div>

        <div id="banned-players-empty" class="hidden text-center py-12">
            <div class="w-16 h-16 mx-auto mb-4 bg-green-900/50 rounded-full flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-10 h-10 text-green-300">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 01-1.043 3.296 3.745 3.745 0 01-3.296 1.043A3.745 3.745 0 0112 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 01-3.296-1.043 3.745 3.745 0 01-1.043-3.296A3.745 3.745 0 013 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 011.043-3.296 3.746 3.746 0 013.296-1.043A3.746 3.746 0 0112 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 013.296 1.043 3.746 3.746 0 011.043 3.296A3.745 3.745 0 0121 12z" />
                </svg>
            </div>
            <h3 class="text-lg font-medium text-white mb-2">No Banned Players</h3>
            <p class="text-green-200/60">Your server has no banned players</p>
        </div>
    </div>
</main>

<!-- Action Confirmation Modal -->
<div id="action-modal" class="modal-overlay z-50">
    <div class="modal-content">
        <h3 class="text-xl font-semibold mb-4 text-white">Confirm Action</h3>
        <p class="mb-4 text-gray-300" id="modal-message"></p>
        <div class="flex justify-end">
<button id="cancel-action" class="bg-neutral-600 hover:bg-neutral-700 text-white font-medium py-2 px-4 rounded-lg transition mr-2">Cancel</button>
            <button id="confirm-action" class="bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded-lg transition">Confirm</button>
        </div>
    </div>
</div>

<script>
    const serverId = new URLSearchParams(window.location.search).get('id');
    let pendingAction = null;
    let pendingPlayer = null;
    function loadServerDetails() {
        fetch(`/api/server/${serverId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('server-name').textContent = data.attributes.name;
                document.getElementById('server-name-breadcrumb').textContent = data.attributes.name;
                document.getElementById('server-description').textContent = data.attributes.description || "No description set.";
            })
            .catch(error => {
                console.error('Error fetching server details:', error);
                showError('Failed to load server details. Please try again.');
            })
    }

    // Load online players
    function loadOnlinePlayers() {
        document.getElementById('online-players-loading').classList.remove('hidden');
        document.getElementById('online-players-list').classList.add('hidden');
        document.getElementById('online-players-empty').classList.add('hidden');

        fetch(`/api/server/${serverId}/players`)
            .then(response => response.json())
            .then(data => {
                const playersList = document.getElementById('online-players-list');
                playersList.innerHTML = '';

                if (!data.players || data.players.length === 0) {
                    document.getElementById('online-players-empty').classList.remove('hidden');
                    return;
                }

                playersList.classList.remove('hidden');
                data.players.forEach(player => {
                    const playerCard = createPlayerCard(player, true);
                    playersList.appendChild(playerCard);
                });
            })
            .catch(error => {
                console.error('Error loading online players:', error);
            })
            .finally(() => {
                document.getElementById('online-players-loading').classList.add('hidden');
            });
    }

    // Load banned players
    function loadBannedPlayers() {
        document.getElementById('banned-players-loading').classList.remove('hidden');
        document.getElementById('banned-players-list').classList.add('hidden');
        document.getElementById('banned-players-empty').classList.add('hidden');

        fetch(`/api/server/${serverId}/players/banned`)
            .then(response => response.json())
            .then(data => {
                const bannedList = document.getElementById('banned-players-list');
                bannedList.innerHTML = '';

                if (!data.bannedPlayers || data.bannedPlayers.length === 0) {
                    document.getElementById('banned-players-empty').classList.remove('hidden');
                    return;
                }

                bannedList.classList.remove('hidden');
                data.bannedPlayers.forEach(player => {
                    const playerCard = createPlayerCard(player, false);
                    bannedList.appendChild(playerCard);
                });
            })
            .catch(error => {
                console.error('Error loading banned players:', error);
            })
            .finally(() => {
                document.getElementById('banned-players-loading').classList.add('hidden');
            });
    }

    // Create player card
    function createPlayerCard(player, isOnline) {
        const div = document.createElement('div');
        div.className = 'player-card bg-white/5 rounded-lg p-4 flex items-center justify-between';
        
        // Get player head image URL (uses Minecraft API)
        const playerHeadUrl = `https://minotar.net/avatar/${player}/40.png`;
        
        div.innerHTML = `
            <div class="flex items-center">
                <img src="${playerHeadUrl}" alt="${player}" class="player-head mr-4" onerror="this.src='https://minotar.net/avatar/steve/40.png'">
                <div>
                    <h3 class="text-white font-medium">${player}</h3>
                    <span class="text-sm ${isOnline ? 'text-green-400' : 'text-red-400'}">${isOnline ? 'Online' : 'Banned'}</span>
                </div>
            </div>
            <div class="flex space-x-2">
                ${isOnline ? `
                    <button onclick="showActionConfirmation('kick', '${player}')" class="bg-orange-600 hover:bg-orange-700 text-white px-3 py-1.5 rounded-lg text-sm transition hover:scale-95">
                        Kick
                    </button>
                    <button onclick="showActionConfirmation('ban', '${player}')" class="bg-red-600 hover:bg-red-700 text-white px-3 py-1.5 rounded-lg text-sm transition hover:scale-95">
                        Ban
                    </button>
                ` : `
                    <button onclick="showActionConfirmation('unban', '${player}')" class="bg-green-600 hover:bg-green-700 text-white px-3 py-1.5 rounded-lg text-sm transition hover:scale-95">
                        Unban
                    </button>
                `}
            </div>
        `;
        return div;
    }

    // Show action confirmation modal
    function showActionConfirmation(action, player) {
        pendingAction = action;
        pendingPlayer = player;
        
        const messages = {
            kick: `Are you sure you want to kick ${player}?`,
            ban: `Are you sure you want to ban ${player}?`,
            unban: `Are you sure you want to unban ${player}?`
        };
        
        document.getElementById('modal-message').textContent = messages[action];
        document.getElementById('action-modal').classList.add('active');
    }

    // Perform player action
    function performAction() {
        if (!pendingAction || !pendingPlayer) return;

        const endpoints = {
            kick: `/api/server/${serverId}/players/${pendingPlayer}/kick`,
            ban: `/api/server/${serverId}/players/${pendingPlayer}/ban`,
            unban: `/api/server/${serverId}/players/${pendingPlayer}/unban`
        };

        fetch(endpoints[pendingAction], {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                reason: `You have been ${pendingAction}ned from the server`
            })
        })
        .then(response => {
            if (!response.ok) throw new Error(`Failed to ${pendingAction} player`);
            showNotification(`Successfully ${pendingAction}${pendingAction === 'ban' ? 'ned' : 'ed'} ${pendingPlayer}`, 'success');
            loadOnlinePlayers();
            loadBannedPlayers();
        })
        .catch(error => {
            console.error(`Error ${pendingAction}ing player:`, error);
            showNotification(`Failed to ${pendingAction} ${pendingPlayer}`, 'error');
        })
        .finally(() => {
            closeModal();
        });
    }

    // Show notification
    function showNotification(message, type) {
        const notification = document.createElement('div');
        notification.className = `fixed bottom-4 right-4 px-6 py-3 rounded-lg shadow-lg fade-in ${
            type === 'success' ? 'bg-green-500' : 'bg-red-500'
        } text-white`;
        notification.innerHTML = `
            <div class="flex items-center">
                ${type === 'success' ? `
                    <svg class="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                    </svg>
                ` : `
                    <svg class="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                    </svg>
                `}
                ${message}
            </div>
        `;
        document.body.appendChild(notification);
        setTimeout(() => {
            notification.classList.add('fade-out');
            setTimeout(() => notification.remove(), 500);
        }, 5000);
    }

    // Close modal
    function closeModal() {
        document.getElementById('action-modal').classList.remove('active');
        pendingAction = null;
        pendingPlayer = null;
    }

    // Event listeners
    document.getElementById('cancel-action').addEventListener('click', closeModal);
    document.getElementById('confirm-action').addEventListener('click', performAction);

    // Initial load
    document.addEventListener('DOMContentLoaded', () => {
        loadServerDetails();
        loadOnlinePlayers();
        loadBannedPlayers();
        
        // Refresh player lists every 30 seconds
        setInterval(() => {
            loadOnlinePlayers();
            loadBannedPlayers();
        }, 30000);
    });
</script>

<%- include('../components/bottom') %>