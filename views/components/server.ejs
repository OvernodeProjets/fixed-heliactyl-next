<% if (!req.query.id || !req.query.numeric) { %>
<meta http-equiv="refresh" content="0; url=/servers?err=INVALID">
<% } %>

<nav class="relative z-50 mb-6">

    <!-- Navigation Items -->
<div class="block md:overflow-x-visible overflow-x-auto scrollbar-hide relative overflow-visible">

    <div class="space-x-2 md:space-x-4 rounded-full bg-white/5 backdrop-blur-xl p-2 md:p-1.5 inline-flex items-center">
            <!-- Core Server Management -->
            <a href="/server/manage?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link group rounded-full px-4 py-1.5 text-sm text-gray-300 hover:text-indigo-300 transition-all duration-200 hover:scale-95">
                Console
            </a>
            <a href="/server/files?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link group rounded-full px-4 py-1.5 text-sm text-gray-300 hover:text-indigo-300 transition-all duration-200 hover:scale-95">
                Files
            </a>
            <a href="/server/backups?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link group rounded-full px-4 py-1.5 text-sm text-gray-300 hover:text-indigo-300 transition-all duration-200 hover:scale-95">
                Backups
            </a>
            
            <!-- Server Content -->
            <a href="/server/worlds?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link group rounded-full px-4 py-1.5 text-sm text-gray-300 hover:text-indigo-300 transition-all duration-200 hover:scale-95">
                Worlds
            </a>
            <a href="/server/plugins?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link group rounded-full px-4 py-1.5 text-sm text-gray-300 hover:text-indigo-300 transition-all duration-200 hover:scale-95">
                Plugins
            </a>
            
            <!-- Configuration -->
            <a href="/server/allocations?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link group rounded-full px-4 py-1.5 text-sm text-gray-300 hover:text-indigo-300 transition-all duration-200 hover:scale-95">
                Allocations
            </a>

            <a href="/server/settings?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link group rounded-full px-4 py-1.5 text-sm text-gray-300 hover:text-indigo-300 transition-all duration-200 hover:scale-95">
                Settings
            </a>

        <!-- More Dropdown -->
        <div class="relative inline-block">
            <button id="more-menu-button" class="srv-link group rounded-full px-4 py-1.5 text-sm text-gray-300 hover:text-indigo-300 transition-all duration-200 flex items-center space-x-1">
                <span>More</span>
                <svg class="w-4 h-4 transition-transform duration-200 group-data-[state=open]:rotate-180" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                </svg>
            </button>

            <div id="more-menu-content" class="backdrop-blur-xl hidden opacity-0 transform scale-95 absolute right-0 mt-2 w-56 transition-all duration-200">
                <div class="rounded-xl bg-[#0e0e10] backdrop-blur-xl border border-white/10 shadow-xl">
            <!-- Monitoring -->
            <div class="p-1.5">
                <div class="px-3 py-1.5 text-xs font-medium text-white/70 uppercase tracking-wider">
                    Monitoring
                </div>
                <a href="/server/statistics?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Statistics
                </a>
                <a href="/server/logs?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Activity Logs
                </a>
            </div>

            <!-- Network -->
            <div class="p-1.5 border-t border-white/10">
                <div class="px-3 py-1.5 text-xs font-medium text-white/70 uppercase tracking-wider">
                    Network
                </div>
                <a href="/server/subdomains?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Subdomains
                </a>
            </div>

            <% if (req.query.numeric !== '0') { %>
            <!-- User Management -->
            <div class="p-1.5 border-t border-white/10">
                <div class="px-3 py-1.5 text-xs font-medium text-white/70 uppercase tracking-wider">
                    User Access
                </div>
                <a href="/server/subusers?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Subusers
                </a>
            </div>
            <% } %>

            <!-- Advanced Management -->
            <div class="p-1.5 border-t border-white/10">
                <div class="px-3 py-1.5 text-xs font-medium text-white/70 uppercase tracking-wider">
                    Management
                </div>
                <a href="/server/automations?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Automations
                </a>
                <a href="/server/transfer?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Transfer
                </a>
                <a href="/server/advanced?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Advanced
                </a>
            </div>

            <!-- Import Tools -->
            <div class="p-1.5 border-t border-white/10">
                <div class="px-3 py-1.5 text-xs font-medium text-white/70 uppercase tracking-wider">
                    Tools
                </div>
                <a href="/server/import?id=<%= req.query.id %>&numeric=<%= req.query.numeric %>&mode=<%= req.query.mode || "server" %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Import via SFTP
                </a>
            </div>

            <div class="p-1.5 border-t border-white/10">
                <div class="px-3 py-1.5 text-xs font-medium text-white/70 uppercase tracking-wider">
                    Resources
                </div>
                <a href="/servers/edit?numeric=<%= req.query.numeric %>" class="srv-link block rounded-lg px-3 py-1.5 text-sm text-gray-300 hover:text-indigo-300 hover:bg-indigo-500/20 transition-all duration-200">
                    Change RAM, CPU or disk
                </a>
            </div>
        </div>
    </div>
</div>
        </div>
    </div>
</nav>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const currentPath = window.location.pathname;
    const moreMenuButton = document.getElementById('more-menu-button');
    const moreMenuContent = document.getElementById('more-menu-content');

    // Active link highlighting
    document.querySelectorAll('.srv-link').forEach(link => {
        const href = link.getAttribute('href')?.split('?')[0];
        if (href && currentPath.includes(href)) {
            link.classList.add('bg-indigo-500/20', 'text-indigo-300');
        }
    });

    if (!moreMenuButton || !moreMenuContent) return;

    let isMoreMenuOpen = false;
    let closeTimeout;
    let originalParent = moreMenuContent.parentNode;
    let originalNextSibling = moreMenuContent.nextSibling;

    // utility: position menu under button (for fixed positioning)
    function positionMenuFixed() {
        const btnRect = moreMenuButton.getBoundingClientRect();
        const menuRect = moreMenuContent.getBoundingClientRect();
        // place menu just below button, align right edges
        const top = Math.min(window.innerHeight - menuRect.height - 8, btnRect.bottom + 6);
        const right = Math.max(8, window.innerWidth - (btnRect.right));
        moreMenuContent.style.position = 'fixed';
        moreMenuContent.style.top = top + 'px';
        moreMenuContent.style.right = right + 'px';
        moreMenuContent.style.left = 'auto';
        moreMenuContent.style.zIndex = 99999;
    }

    function resetMenuPlacement() {
        moreMenuContent.style.position = '';
        moreMenuContent.style.top = '';
        moreMenuContent.style.right = '';
        moreMenuContent.style.left = '';
        moreMenuContent.style.zIndex = '';
    }

    const openMoreMenu = () => {
        isMoreMenuOpen = true;
        moreMenuButton.setAttribute('data-state', 'open');

        // If touch device (no hover) we move the menu to body and use fixed positioning
        if (!window.matchMedia("(hover: hover)").matches) {
            // move element to body so it's not clipped by ancestor overflow
            if (moreMenuContent.parentNode !== document.body) {
                document.body.appendChild(moreMenuContent);
            }
            moreMenuContent.classList.remove('hidden', 'opacity-0', 'scale-95');
            moreMenuContent.classList.add('opacity-100', 'scale-100');
            // compute position
            requestAnimationFrame(() => {
                positionMenuFixed();
            });
        } else {
            // Desktop behaviour: leave it in place (absolute)
            moreMenuContent.classList.remove('hidden');
            requestAnimationFrame(() => {
                moreMenuContent.classList.remove('opacity-0', 'scale-95');
                moreMenuContent.classList.add('opacity-100', 'scale-100');
            });
        }
    };

    const closeMoreMenu = () => {
        isMoreMenuOpen = false;
        moreMenuButton.setAttribute('data-state', 'closed');

        moreMenuContent.classList.remove('opacity-100', 'scale-100');
        moreMenuContent.classList.add('opacity-0', 'scale-95');

        // On touch/mobile, after animation, move it back to original parent to preserve DOM structure
        setTimeout(() => {
            if (!isMoreMenuOpen) {
                moreMenuContent.classList.add('hidden');
                if (moreMenuContent.parentNode === document.body && originalParent) {
                    // put it back where it was
                    if (originalNextSibling) originalParent.insertBefore(moreMenuContent, originalNextSibling);
                    else originalParent.appendChild(moreMenuContent);
                    resetMenuPlacement();
                }
            }
        }, 200);
    };

    // Desktop hover handling
    if (window.matchMedia("(hover: hover)").matches) {
        moreMenuButton.addEventListener('mouseenter', () => {
            clearTimeout(closeTimeout);
            openMoreMenu();
        });

        moreMenuButton.addEventListener('mouseleave', (event) => {
            if (!event.relatedTarget?.closest('#more-menu-content')) {
                closeTimeout = setTimeout(closeMoreMenu, 200);
            }
        });

        moreMenuContent.addEventListener('mouseenter', () => {
            clearTimeout(closeTimeout);
            openMoreMenu();
        });

        moreMenuContent.addEventListener('mouseleave', (event) => {
            if (!event.relatedTarget?.closest('#more-menu-button')) {
                closeTimeout = setTimeout(closeMoreMenu, 200);
            }
        });
    }

    // Mobile / click handling
    moreMenuButton.addEventListener('click', (e) => {
        e.stopPropagation();
        e.preventDefault();
        if (isMoreMenuOpen) {
            closeMoreMenu();
        } else {
            openMoreMenu();
        }
    });

    // Close when clicking outside (works whether menu is in body or original parent)
    document.addEventListener('click', (event) => {
        const isIn = event.target.closest('#more-menu-button, #more-menu-content');
        if (!isIn && isMoreMenuOpen) {
            closeMoreMenu();
        }
    });

    // Keep menu fixed when scrolling on mobile
    window.addEventListener('scroll', () => {
       if (isMoreMenuOpen && moreMenuContent.style.position === 'fixed') {
            positionMenuFixed();
        }
    }, { passive: true });


    // Ensure anchor clicks inside menu close the menu (so navigation works cleanly)
    moreMenuContent.addEventListener('click', (ev) => {
        const anchor = ev.target.closest('a');
        if (anchor) {
            // let the navigation happen, but close the menu visually
            closeMoreMenu();
            // Do not prevent default: allow navigation
        }
    });
});
</script>
